#!/usr/bin/env python3
from hw1_prepare import *
from math import sqrt,log
from matplotlib import pyplot as plt
import numpy as np
from numpy import dot

def getLength(v):
    s = 0
    for elem in v:
        s += elem*elem
    return sqrt(s)

def getSSE(w,data,y):
    s = 0
    for i,_ in enumerate(data):
        wx = dotProduct(w,data[i])
        wx = wx - y[i]
        s += wx * wx
    return s

def dotProduct (w,x):
    s = 0
    for i,_ in enumerate(w):
        s += w[i] * x[i]
    return s
def printSmall(w):

    w_name = ['dummy','bedrooms','bathrooms', 'sqft_living', 'sqft_lot', 
              'floors', 'waterfront', 'view', 'condition', 'grade', 
              'sqft_above', 'sqft_basement', 'yr_built', 'yr_renovated', 
              'lat', 'long', 'sqft_living15', 'sqft_lot15', 
              'month1','month2','month3','month4','month5','month6','month7','month8', 'month9','month10','month11','month12',
              'day1', 'day2','day3','day4','day5','day6','day7','day8','day9','day10',
              'day11', 'day12','day13','day14','day15','day16','day17','day18','day19','day20',
              'day21', 'day22','day23','day24','day25','day26','day27','day28','day29','day30','day31',
              'year2014','year2015']
    for i in range(70):
        w_name.append('zipcode')
    www = w[:]
    pw = [0 for i in range(len(w_name))]
    for i,_ in enumerate(www):
        pw[i] = (abs(www[i]),w_name[i])
    pw.sort()
    print(pw)
    

def printW(w):
    s = '['
    for elem in w:
        s = s + str(elem) + ','
    s = s[:-1]
    s = s + ']'
    print(s)


def learning(): # implementation of part 1.b with making graph
    data, y, fI = readData()
    data_dev, y_dev = readDevData(fI)
    #data_dev, y_dev = readDevData()
    epsilon = 0.5
    featureLength = len(data[0])
    w = [0 for i in range(featureLength)] # the weight
    deltaW = [0 for i in range(featureLength)]  
    
    w_np = np.array(w)
    deltaW_np = np.array(deltaW)
    data_np = np.array(data)
    y_np = np.array(y)

    #data_dev_np = np.array(data_dev)
    #y_dev_np = np.array(y_dev)

    #learningRate = [-0.000057,-0.00001,-0.000001,-0.0000001] 
    learningRate = -0.00005
    #penalties = [0, 0.001, 0.01, 0.1, 1, 10, 100] # 0-6
    #penalties = [1, 10, 100] # 0-6
    #penalty = 10
    lll = 100
    gap = 25
    x_G = [gap*i for i in range(lll)]
    y_G = [0 for i in range(lll)]
    y_G_dev = [0*i for i in range(lll)]
    
    #temp_SSE = float('inf')    
    temp_dev_SSE = float('inf')    
    #min_SSE = float('inf')
    min_dev_SSE = float('inf')
    train_iter = 0
    w_np = np.array(w)
    iterations = 0
    l = float('inf')
    # ---
    # learning
    while iterations <= lll*gap:
        deltaW_np = np.array([0.0 for i in range(featureLength)])
        for i,_ in enumerate(data_np):
            deltaW_np += (dot(w_np,data_np[i]) - y_np[i]) * data_np[i]
        #deltaW_np[1:] += w_np[1:] * penalty # except dummy 
        
        #print(getLength(deltaW_np))
        temp_dev_SSE = getSSE(w_np,data_dev,y_dev)
        if min_dev_SSE > temp_dev_SSE:
            min_dev_SSE = temp_dev_SSE
            train_iter = iterations
            w = w_np[:]
        elif min_dev_SSE < temp_dev_SSE: 
            break
        '''
        if iterations in x_G:
            pos = x_G.index(iterations)
            y_G[pos] = getSSE(w_np,data,y)
            y_G_dev[pos] = getSSE(w_np,data_dev,y_dev)
        '''
        # update w
        w_np = w_np + learningRate * deltaW_np
        iterations += 1
    
    printW(w)
    print(iterations)
    print(getSSE(w,data,y))
    print(getSSE(w,data_dev,y_dev))
    '''
    print(y_G)
    print(y_G_dev)
    plt.plot(x_G,y_G)
    plt.plot(x_G,y_G_dev)
    plt.show()
    print(min(y_G_dev),y_G_dev.index(min(y_G_dev)))
    
    [-1.22597361246,-0.232213671024,2.93330706356,5.63570964756,0.494390442868,-0.420780152369,3.95742654622,2.57720518331,1.07243685711,6.54953181364,6.12658551624,0.60192823965,-1.4363247078,0.238189314033,2.92828167458,-1.48341016176,2.7967995132,0.301111724882,-0.576369122186,-0.563871389908,-0.206357651327,-0.198388621925,0.0427592042634,-0.00827520440554,0.0647199187173,0.0904567635408,0.0716416213895,0.00673489192877,0.0691772675262,-0.0182012900698,0.0332794508387,-0.0249373014525,0.0694386235706,-0.0214217729518,-0.162651587201,-0.0383179849474,0.0181594048831,0.0959797076963,-0.0411927575028,-0.102797263512,0.0637667075358,-0.15607912376,0.182794572551,0.0537610753241,-0.0339368484339,-0.0390206593058,-0.18809626929,-0.0711163084112,0.215313998745,-0.14056003884,-0.0858349203785,-0.134532243422,-0.0746788339405,-0.0278168320185,0.0499837718978,-0.176964807741,-0.150139252782,-0.170906457428,-0.0711444745415,0.108387361325,-0.204692548961,-0.925028630833,-0.300944981623,-0.268696287285,-0.0612169094141,0.467287235035,-0.708417947293,0.155803086357,-0.485973360212,-0.653862448207,-0.196317932833,-0.746724684185,-0.742471583938,-0.875706000404,-0.629511184229,-0.183266795638,0.989926184178,-0.466444707604,0.363405378417,-1.57727037823,0.502919641556,0.20452775651,1.60600887173,-1.25789370321,0.492309729779,-0.885413569791,-0.721049559444,0.446957428377,4.9956547794,2.8790166058,-0.769206264556,-1.19515461631,-1.28216095128,-0.126432756311,-0.933546465547,0.745786868303,0.118465803165,0.199329625535,-1.058332571,-0.228869779059,-1.18275524485,-1.21657669093,-0.756429695568,-1.02305901828,0.132278235139,0.296132245011,-0.741984645101,-0.757012004494,-1.05812021392,-0.0668577128652,-0.958601671579,0.278037908642,-1.19738272711,0.721880119838,0.658553544874,-0.983784141864,-0.357121252527,1.56587701255,3.19278725471,0.611101454568,0.134522568487,-0.828847193979,1.64678245514,-0.339916735556,1.09569450019,-1.37373382296,-0.587466046124,-0.698356955541,-1.09435372992,-0.953719504168,5.82964263769,1.28606487572,-0.612707955849]
152
26033.2589567
24688.6366737


    w = [-2.33305303, -0.63864622,  3.22057617,  5.61848201,  0.21580876,  0.49135668,
  3.89496616,  2.57352968,  1.14897892,  8.32943754,  5.93488229,  1.13999929,
 -2.94186493,  0.31528547, -0.93144946,  3.7509575,  -2.60095171,  3.13733376,
 -0.06056267,  0.14294163, -0.18715508,  0.35341419]
    data, y, fI = readData()
    data_dev, y_dev, fI= readDevData()
    print(getSSE(w,data,y))
    print(getSSE(w,data_dev,y_dev))
    '''

if __name__ == '__main__':
    learning()
    #w = [-1.25031898395,-0.545534160098,2.83625248069,6.12617787723,0.660307244726,-0.771024552983,4.54231879197,2.47896702915,1.10026899968,6.53879968982,6.74110345564,0.400457740038,-1.21903657579,0.247187167953,3.00165096259,-1.61145283217,2.23286648331,0.367662178446,-0.617653527994,-0.596081186751,-0.241542054924,-0.235649046015,0.0452273141427,0.0211717183772,0.0833793533191,0.108129385295,0.0871720529843,0.0158460829439,0.0764175546294,0.00326337004282,0.0157802449054,-0.0211864474218,0.06573557534,-0.0258721987851,-0.1684053527,-0.0367708182176,0.0226739248374,0.0909130492062,-0.0472411572148,-0.109154442225,0.0624639742174,-0.15695833297,0.183588329395,0.0487715161388,-0.0496610561406,-0.0387349338517,-0.193831273703,-0.0623015184526,0.217187200367,-0.123725969142,-0.0878524132158,-0.121582975103,-0.0719854851647,-0.03444108345,0.0513824276594,-0.180530863526,-0.148981738546,-0.158816380701,-0.0594120124204,0.0858812973866,-0.197250070453,-0.960856222204,-0.289462761746,-0.31424342879,-0.0649257721382,0.550495447494,-0.76744092489,0.114209259164,-0.49505898373,-0.715516218409,-0.181505942793,-0.818969368578,-0.888723357308,-0.906749089512,-0.717179079858,-0.245288423097,0.934185027411,-0.486485444258,0.362637778827,-1.68631676121,0.523238535587,0.208192028603,1.81379551757,-1.35514622372,0.539354012514,-0.999356539685,-0.766323413723,0.492894960727,5.03524043478,2.9231467049,-0.80877113337,-1.30389749303,-1.42289597577,-0.178242169219,-0.999713991437,0.738271415136,0.145130214311,0.17508944405,-1.13327182478,-0.206386307113,-1.24381708261,-1.41340332617,-0.88724465618,-1.07361721817,0.140791075172,0.300233796765,-0.786268347043,-0.801682560141,-1.10931186195,-0.181758574334,-1.00585654811,0.316491090762,-1.25502415183,0.80559543194,0.736119799258,-1.0209910545,-0.393739995838,1.67231817399,3.37118328049,0.612539279269,0.168737773341,-0.94656285351,1.94786894071,-0.454420103583,1.11603704114,-1.53760378516,-0.567645402976,-0.736069853061,-1.13474741978,-1.02639860031,7.34221313587,1.56947464732,-0.867231969364]
    #printSmall(w)